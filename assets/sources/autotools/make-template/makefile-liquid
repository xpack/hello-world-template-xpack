# These files were originally generated by the Eclipse CDT managed build
# and manually updated for this project.

# The build runs in a folder like build/xxx, thus all paths refering
# to the project must be prefixed with "../../"

RM := rm -rf
{% if toolchain == 'gcc' -%}
CC := gcc
CXX := g++
{% elsif toolchain == 'clang' -%}
CC := clang
CXX := clang++
{% endif %}
{% if language == 'c' -%}
LD := $(CC)
# LD := $(CXX)
{% elsif language == 'cpp' -%}
# LD := $(CC)
LD := $(CXX)
{% endif %}

ifeq ($(OS),Windows_NT)
    uname_s := Windows
else
    # Darwin, Linux
    uname_s := $(shell uname -s)
endif

PROJECT_NAME := hello-world

CPPFLAGS := -I"../../include" -I"../../libs/adder/include"
COMMON_FLAGS := -g3 -Wall -fmessage-length=0 -fsigned-char -ffunction-sections -fdata-sections -flto

ifeq ($(BUILD_TYPE),debug)
CPPFLAGS += -DDEBUG
COMMON_FLAGS += -O0
else ifeq ($(BUILD_TYPE),release)
CPPFLAGS += -DNDEBUG
COMMON_FLAGS += -O2
endif

CFLAGS := $(COMMON_FLAGS)
CXXFLAGS := $(COMMON_FLAGS)

LDFLAGS := $(COMMON_FLAGS)

ifeq ($(uname_s), Darwin)
  # macOS always uses the Apple linker, regarless of the compiler.
  LDFLAGS += -Wl,-dead_strip
else
  # TODO: adjust for Microsoft cl
  LDFLAGS += -Wl,-gc-sections
endif


# -----------------------------------------------------------------------------

# All of the sources participating in the build will be collected here.
C_SRCS :=
C_DEPS :=
CPP_SRCS :=
CPP_DEPS :=
OBJS :=

# All folders with source files will be collected here.
SUBDIRS :=

-include src/folder.mk
-include libs/adder/src/folder.mk

USER_OBJS :=
LIBS :=

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(CPP_DEPS)),)
-include $(CPP_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
endif

# -----------------------------------------------------------------------------

# All Target
all: $(PROJECT_NAME)

# Tool invocations
$(PROJECT_NAME): $(OBJS) $(USER_OBJS)
	@echo 'Building target: $@'
	@echo 'Invoking: Linker'
	$(LD) $(LDFLAGS) -o "$(PROJECT_NAME)" $(OBJS) $(USER_OBJS) $(LIBS)
	@echo 'Finished building target: $@'
	@echo ' '

# Other Targets
clean:
	-$(RM) $(OBJS)$(CPP_DEPS)$(C_DEPS) $(PROJECT_NAME)
	-@echo ' '

.PHONY: all clean dependents

# -----------------------------------------------------------------------------
